input {
  jdbc {
	jdbc_driver_library => "c:\dev\jdbc_driver_library\sqljdbc_4.2\enu\sqljdbc42.jar"
	jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
	jdbc_connection_string => "jdbc:sqlserver://DUBSQL2014;integratedSecurity=true;"
	jdbc_user => "meaneym"
	jdbc_password_filepath => "c:\dev\elastic\logstash-5.3.0\pass\pass.txt"
	jdbc_fetch_size => 250000
	#use_column_value => true
	#tracking_column_type => timestamp
	#tracking_column => lastupdated
	#record_last_run => true
	#last_run_metadata_path => "c:\dev\elastic\logstash-5.3.0\last_run\eric\.logstash_jdbc_last_run"
	#schedule => "* * * * *"
	statement_filepath => "c:\dev\elastic\logstash-5.3.0\sql\eric\eric_output_mysql.sql"
  }
}

filter {
  #mutate {
	#add_field => ["logstash_checksum", "%{measurementid}"]
	#add_field => ["meta_note_ISMDA", "The 'IsMDA' field is very important as this determines whether the data reported is a measured activity as opposed to not being detected. The IsMDA field determines whether the data reported is a measured activity or below the Minimum Detectable Activity of the monitoring equipment used to make the measurement. If the IsMDA field is False then the result is detected: use the Value field to determine the activity. The Uncertainty field will tell you the level of uncertainty for that value. If the ISMDA field is True, then the result reported is below limits of detection. The Value field will tell you the Minimum Detectable Activity, in this instance the reported result should be either 'Not Detected' or '< Value'."]
  #}
  #anonymize {
	#fields => ["logstash_checksum"]
	#algorithm => "MD5"
	#key => "a"
  #}
  #ruby {
	#code => "
	#  hash = event.to_hash
	#  hash.each do |k,v|
	#	if v == nil
	#	  event.remove(k)
	#	end
	#  end
	#"
  #}
}

output {
  jdbc {
	driver_jar_path => "c:\dev\jdbc_driver_library\mysql-connector-java-5.1.36\mysql-connector-java-5.1.36-bin.jar"
	driver_class => "com.mysql.jdbc.Driver"
	connection_string => "jdbc:mysql://localhost:3306/eric?user=developeruser&password=MMEPATest1!"
	statement => ["
	INSERT INTO measurements2 
 	(measurementid, locationcode, locationname, locationdisplayname, locationnuts, latitude_dec, longitude_dec, latitude_ig, longitude_ig, latitude_itm, longitude_itm, locationcatchment, heightaboveland, heightabovesea, countrycode, countryname, accuracytypecode, accuracytypedescription, locationtypedescription, locationthirdpartycode, locationcomments, x_background, x_eurdepstationid, sourcecode, sourcename, sourcedescription, laboratorycode, laboratoryname, laboratorysection, sampletypecode, sampletypedescription, nuclidecode, nuclidedescription, instrumentcode, instrumentdescription, beginmeas, endmeas, measurementinterval, ismda, value, valueunitcode, valueunitdescription, valuetypecode, valuetypedescription, uncertainty, uncertaintyunitcode, uncertaintyunitdescription, uncertaintytypecode, uncertaintytypedescription, background, backgroundunitcode, backgroundunitdescription, lastupdated, depth, nativesampleid, alternativenativesampleid, nativeanalysisid, comments, x_recordcount, coreheight, isapproved, samptime, dw_ratio, vol_air, resultnumber, sampletreatmentcode, sampletreatmentdescription)  
 	VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
	","measurementid", "locationcode", "locationname", "locationdisplayname", "locationnuts", "latitude_dec", "longitude_dec", "latitude_ig", "longitude_ig", "latitude_itm", "longitude_itm", "locationcatchment", "heightaboveland", "heightabovesea", "countrycode", "countryname", "accuracytypecode", "accuracytypedescription", "locationtypedescription", "locationthirdpartycode", "locationcomments", "x_background", "x_eurdepstationid", "sourcecode", "sourcename", "sourcedescription", "laboratorycode", "laboratoryname", "laboratorysection", "sampletypecode", "sampletypedescription", "nuclidecode", "nuclidedescription", "instrumentcode", "instrumentdescription", "beginmeas", "endmeas", "measurementinterval", "ismda", "value", "valueunitcode", "valueunitdescription", "valuetypecode", "valuetypedescription", "uncertainty", "uncertaintyunitcode", "uncertaintyunitdescription", "uncertaintytypecode", "uncertaintytypedescription", "background", "backgroundunitcode", "backgroundunitdescription", "lastupdated", "depth", "nativesampleid", "alternativenativesampleid", "nativeanalysisid", "comments", "x_recordcount", "coreheight", "isapproved", "samptime", "dw_ratio", "vol_air", "resultnumber", "sampletreatmentcode", "sampletreatmentdescription"
	]
  }
  stdout { codec => rubydebug }
}